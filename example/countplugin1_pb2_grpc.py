# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import countplugin1_pb2 as countplugin1__pb2


class CounterStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Count = channel.unary_unary(
            '/countplugin1.Counter/Count',
            request_serializer=countplugin1__pb2.Count.Request.SerializeToString,
            response_deserializer=countplugin1__pb2.Count.Response.FromString,
        )
        self.GetCount = channel.unary_unary(
            '/countplugin1.Counter/GetCount',
            request_serializer=countplugin1__pb2.GetCount.Request.SerializeToString,
            response_deserializer=countplugin1__pb2.GetCount.Response.FromString,
        )


class CounterServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Count(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCount(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CounterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Count': grpc.unary_unary_rpc_method_handler(
            servicer.Count,
            request_deserializer=countplugin1__pb2.Count.Request.FromString,
            response_serializer=countplugin1__pb2.Count.Response.SerializeToString,
        ),
        'GetCount': grpc.unary_unary_rpc_method_handler(
            servicer.GetCount,
            request_deserializer=countplugin1__pb2.GetCount.Request.FromString,
            response_serializer=countplugin1__pb2.GetCount.Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'countplugin1.Counter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
